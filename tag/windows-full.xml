<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="../feed.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
<title>Susam's Windows Pages</title>
<link>https://susam.net/tag/windows.html</link>
<atom:link rel="self" type="application/rss+xml" href="https://susam.net/tag/windows-full.xml"/>
<description>Feed for Susam's Windows Pages</description>

<item>
<title>Minimal Installation of WinHTTP API</title>
<link>https://susam.net/minimal-installation-of-winhttp-api.html</link>
<guid isPermaLink="false">draiq</guid>
<pubDate>Wed, 14 Apr 2010 00:00:00 +0000</pubDate>
<description>
<![CDATA[
<p>
  Here are the steps to perform for a minimal download and
  installation of WinHTTP API for C++ so that we have the
  the <code>winhttp.lib</code> and <code>winhttp.h</code> files while
  writing C++ programs using the WinHTTP API:
</p>
<ol>
  <li>Download PSDK-x86.exe
  from <a href="https://web.archive.org/web/20100507044252/http://www.microsoft.com/downloads/details.aspx?familyid=0BAF2B35-C656-4969-ACE8-E4C0C0716ADB&amp;displaylang=en">Microsoft
      ® Windows Server® 2003 R2 Platform SDK Web Install</a>.
  </li>
  <li>
    Run the installer, select <em>Custom</em> installation type, clear
    all categories and select <em>Microsoft Windows Core SDK</em> &gt;
    <em>Build Environment</em> &gt; <em>Build Environment (x86
    32-bit)</em>.
  </li>
</ol>
<p>
  After the installation is complete, the <code>winhttp.h</code> file
  can be found at <code>C:\Program Files\Microsoft Platform SDK Server
    2003 R2\Include</code>.
</p>
<!-- ### -->
<p>
  <a href="https://susam.net/minimal-installation-of-winhttp-api.html">Read on website</a> |
  <a href="https://susam.net/tag/c++.html">#c++</a> |
  <a href="https://susam.net/tag/windows.html">#windows</a> |
  <a href="https://susam.net/tag/programming.html">#programming</a> |
  <a href="https://susam.net/tag/technology.html">#technology</a>
</p>
]]>
</description>
</item>
<item>
<title>Character Encoding Bug in Notepad</title>
<link>https://susam.net/character-encoding-bug-in-notepad.html</link>
<guid isPermaLink="false">lrtgk</guid>
<pubDate>Mon, 19 Jun 2006 00:00:00 +0000</pubDate>
<description>
<![CDATA[
<h2 id="symptoms-of-the-bug">Symptoms of the Bug<a href="#symptoms-of-the-bug"></a></h2>
<p>
  I came across an interesting bug in Notepad last week.  I have
  verified that this bug is reproducible in Windows XP.  Older
  versions might be affected as well.  Here are the steps to reproduce
  the issue:
</p>
<ol>
  <li>
    Open Notepad.
  </li>
  <li>
    Enter the following text exactly as shown here:
    <pre><samp>this app can break</samp></pre>
  </li>
  <li>
    Save the file.
  </li>
  <li>
    Close Notepad.
  </li>
  <li>
    Open the file again with Notepad.
  </li>
</ol>
<p>
  Some users may find Chinese characters instead of the English text
  that was entered.  Others may find 9 boxes instead.
</p>
<p>
  A similar issue happens with other strings like the following ones:
</p>
<pre><samp>Bush hid the facts</samp></pre>
<pre><samp>Bill hid the facts</samp></pre>
<pre><samp>aa aaa aaa</samp></pre>
<pre><samp>bb bbb bbb</samp></pre>
<p>
  We can craft many more such strings that trigger this bug if we
  understand what causes this bug.
</p>
<h2 id="cause-of-the-bug">Cause of the Bug<a href="#cause-of-the-bug"></a></h2>
<p>
  Let us take the following text as an example and try to understand
  what is going on:
</p>
<pre><samp>this app can break</samp></pre>
<p>
  Here are the hexadecimal codes for the characters in the string:
</p>
<pre><samp>74 68 69 73 20 61 70 70 20 63 61 6e 20 62 72 65 61 6b</samp></pre>
<p>
  Now let us try to interpret these 18 bytes as if they represent
  UTF-16LE encoded characters.  After rearranging them to represent
  UTF-16LE encoded characters, we get 9 UTF-16LE encoded characters
  with the following code points:
</p>
<pre>
<samp><a href="https://www.fileformat.info/info/unicode/char/6874/">6874</a> <!--
--><a href="https://www.fileformat.info/info/unicode/char/7369/">7369</a> <!--
--><a href="https://www.fileformat.info/info/unicode/char/6120/">6120</a> <!--
--><a href="https://www.fileformat.info/info/unicode/char/7070/">7070</a> <!--
--><a href="https://www.fileformat.info/info/unicode/char/6320/">6320</a> <!--
--><a href="https://www.fileformat.info/info/unicode/char/6e61/">6e61</a> <!--
--><a href="https://www.fileformat.info/info/unicode/char/6220/">6220</a> <!--
--><a href="https://www.fileformat.info/info/unicode/char/6572/">6572</a> <!--
--><a href="https://www.fileformat.info/info/unicode/char/6b61/">6b61</a></samp>
</pre>
<p>
  Click the codes above to see what the characters they represent look
  like.  Each code represents a CJK ideograph.  CJK stands for
  Chinese, Japanese and Korean.
</p>
<p>
  We can see now that the 18 bytes entered into Notepad also happen to
  represent 9 valid CJK ideographs when encoded using UTF-16LE.  When
  Notepad opens a text file, it finds that the bytes in the file
  happen to be valid UTF-16LE characters, so it attempts to display
  them as the corresponding UTF-16LE characters.  Those who do not
  have CJK fonts installed on their systems see them appear as boxes.
</p>
<h2 id="rewriting-the-file">Rewriting the File<a href="#rewriting-the-file"></a></h2>
<p>
  One of my friends, after playing a little with this bug, asked me,
  "When I create that file for the first time, I see 9 boxes.  But if
  I open the same file, delete everything, type the same thing again,
  close it and open it again, I don't see 9 boxes any more.  I can
  read the English text without issues now.  Does it mean that for
  some reason this time Notepad can interpret them as ASCII encoded
  characters?"
</p>
<p>
  The answer is: No!  In fact it is just the opposite.  This time
  Notepad correctly saves them as UTF-16LE encoded characters.
</p>
<p>
  The first time Notepad saves the data in ASCII encoding.  The next
  time it saves it as UTF-16LE encoded characters.
</p>
<p>
  Let us create the file for the first time and see what each byte
  looks like using the <samp>debug</samp> program of DOS.
</p>
<pre>
<samp>C:\&gt;<kbd>debug foo.txt</kbd>
-<kbd>r ip</kbd>
IP 0100
:
-<kbd>d 100 11f</kbd>
0B66:0100  74 68 69 73 20 61 70 70-20 63 61 6E 20 62 72 65  this app can bre
0B66:0110  61 6B BC 00 72 16 03 D3-13 C8 E8 B3 34 00 55 0B  ak..r.......4.U.
-</samp>
</pre>
<p>
  When we open this file using Notepad and edit, Notepad considers the
  text to be in UTF-16LE encoding due to reasons explained earlier in
  this post.  Therefore it displays the text as CJK ideographs or
  boxes (if CJK fonts are missing).  Now when we erase the text and
  write the same English text again, the English text is saved in
  UTF-16LE encoding (not ASCII encoding like the first time).  This
  can be confirmed with the <samp>debug</samp> command.
</p>
<pre>
<samp>C:\&gt;<kbd>debug a.txt</kbd>
-<kbd>r ip</kbd>
IP 0100
:
-<kbd>d 100 11f</kbd>
0B66:0100  FF FE 74 00 68 00 69 00-73 00 20 00 61 00 70 00   ..t.h.i.s.  .a.p.
0B66:0110  70 00 20 00 63 00 61 00-6E 00 20 00 62 00 72 00   p. .c.a.n.  .b.r.
-</samp>
</pre>
<p>
  The two bytes <samp>FF</samp> and <samp>EE</samp> in the beginning
  is the byte order mark (BOM) for UTF-16LE encoding.  The remaining
  bytes are the characters of the text in UTF-16LE encoding.
</p>
<!-- ### -->
<p>
  <a href="https://susam.net/character-encoding-bug-in-notepad.html">Read on website</a> |
  <a href="https://susam.net/tag/windows.html">#windows</a> |
  <a href="https://susam.net/tag/technology.html">#technology</a>
</p>
]]>
</description>
</item>
<item>
<title>WinPopup</title>
<link>https://susam.net/winpopup.html</link>
<guid isPermaLink="false">rnpxg</guid>
<pubDate>Mon, 10 Dec 2001 00:00:00 +0000</pubDate>
<description>
<![CDATA[
<p>
  While browsing the <code>C:\Windows</code> directory of the Windows
  98 system in our dorm room, I came across an interesting program
  named <code>Winpopup.exe</code>.  It is a tiny little program that
  can be used to send messages from one Windows system to another on
  the same local area network (LAN).
</p>
<figure class="stretch">
  <img src="files/blog/winpopup-1.png" alt="A screenshot of Windows directory">
  <figcaption>
    Winpopup.exe in C:\Windows of Windows 98
  </figcaption>
</figure>
<p>
  Windows networking supports the notion of workgroups where one or
  more computers may logically belong to a common group.  Computers
  belonging to the same workgroup can share resources such as files,
  printers, etc. with each other.  To see the workgroup your computer
  belongs to, go to Start &gt; Settings &gt; Control Panel &gt;
  Network &gt; Identification and see the value of the field named
  "Workgroup".  By default, this value is "WORKGROUP" but it can be
  changed to create smaller working groups of computers.
</p>
<p>
  Apart from sending messages to a specific computer, WinPopup
  supports sending messages to an entire workgroup of computers too.
  An example of this is shown later in this post.
</p>
<figure class="stretch">
  <img src="files/blog/winpopup-2.png" alt="A screenshot of Windows workgroup configuration">
  <figcaption>
    Workgroup configuration in Windows 98
  </figcaption>
</figure>
<p>
  To start WinPopup, go to My Computer &gt; C: &gt; Windows, then
  click on the link that says "Show Files", then scroll down to the
  bottom to find WinPopup.exe and finally double click on it to start
  it.  Alternatively, you can also type <kbd>win</kbd>+<kbd>r</kbd>,
  type <code>winpopup</code> and type <kbd>enter</kbd>.
</p>
<figure class="stretch">
  <img src="files/blog/winpopup-3.png" alt="A screenshot of WinPopup">
  <figcaption>
    WinPopup running on Windows 98
  </figcaption>
</figure>
<p>
  To send a message, simply click on the envelope icon, select one of
  the radio buttons depending on whether you want to send a message to
  a specific computer or an entire workgroup, then type the name of
  the computer or workgroup you want to send your message to and then
  type the message to be sent.
</p>
<figure class="stretch">
  <img src="files/blog/winpopup-4.png" alt="A screenshot of message being composed in WinPopup">
  <figcaption>
    Composing a message running on WinPopup running on Windows 98
  </figcaption>
</figure>
<p>
  When you are ready to send the message, just click on the OK button.
  If everything goes fine, a message box confirming that the message
  was successfully sent should appear.
</p>
<figure class="stretch">
  <img src="files/blog/winpopup-5.png" alt="A screenshot of a message successfully sent with WinPopup">
  <figcaption>
    Message sent successfully with WinPopup running on Windows 98
  </figcaption>
</figure>
<p>
  It is worth noting here that the recipient also needs to have
  WinPopup running in order to read messages successfully.  I found
  this tool only a few days ago and I already find this tool to be
  very useful for communicating with other users of Windows systems.
</p>
<hr>
<p>
  <em>
    <strong>Update on 30 Oct 2022:</strong> This article was imported
    into this website from an old intranet portal I used to run during
    my university days back in 2001-2005.  While importing this
    article here, I took the liberty of adding a few screenshots taken
    from a Windows 98 system running in an emulator.
  </em>
</p>
<!-- ### -->
<p>
  <a href="https://susam.net/winpopup.html">Read on website</a> |
  <a href="https://susam.net/tag/windows.html">#windows</a> |
  <a href="https://susam.net/tag/networking.html">#networking</a> |
  <a href="https://susam.net/tag/technology.html">#technology</a>
</p>
]]>
</description>
</item>


</channel>
</rss>
