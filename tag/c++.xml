<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="../feed.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
<title>Susam's C++ Pages</title>
<link>https://susam.net/tag/c++.html</link>
<atom:link rel="self" type="application/rss+xml" href="https://susam.net/tag/c++.xml"/>
<description>Feed for Susam's C++ Pages</description>

<item>
<title>Correctly Printing STAFString</title>
<link>https://susam.net/correctly-printing-stafstring.html</link>
<guid isPermaLink="false">dzrqs</guid>
<pubDate>Fri, 04 Jun 2010 00:00:00 +0000</pubDate>
<description>
<![CDATA[
<p>
  At RSA, we use <a href="http://staf.sourceforge.net/">Software
  Testing Automation Framework (STAF)</a> to automate testing our
  products.  Recently, I ran into a bug that occurred due
  to <code>STAFResult::STAFString</code> not being null-terminated.
  Here is an example C++ program that demonstrates the issue:
</p>
<pre>
<code>#include &lt;iostream&gt;
#include &lt;string&gt;
using namespace std;

#include "STAF.h"
#include "STAFString.h"

int main(int argc, char **argv)
{
    STAFString name("foo");
    STAFHandlePtr handle;

    int rc = STAFHandle::create(name, handle);
    if (rc != 0) {
        std::cerr &lt;&lt; "Could not create STAF handle; error code: "
                  &lt;&lt; rc &lt;&lt; endl;
        return 1;
    }

    STAFResultPtr result = handle-&gt;submit("127.0.0.1", "VAR",
                                          "RESOLVE STRING {STAF/Env/DUMMY}");
    if (result-&gt;rc != 0) {
        std::cerr &lt;&lt; "Could not run STAF command; error code: "
                  &lt;&lt; rc &lt;&lt; "\n";
        return 1;
    }

    STAFString output = result-&gt;result;
    std::cout &lt;&lt; "Output: " &lt;&lt; output.buffer() &lt;&lt; "\n";
}</code>
</pre>
<p>
  Here is an example output of the above program:
</p>
<pre>
<samp>C:\&gt;<kbd>echo %DUMMY%</kbd>
Why__does__it__break
C:\&gt;<kbd>STAFExperiments.exe</kbd>
Output: Why__does__it__break/Env/DUMMY}}</samp>
</pre>
<p>
  The substring <code>/Env/DUMMY</code> at the end of the output is
  garbage.  The result is not null-terminated in the output buffer.
  Here is the correct way to print the output:
</p>
<pre><code>std::cout &lt;&lt; "Output: " &lt;&lt; string(output.buffer(), output.length()) &lt;&lt; "\n";</code></pre>
<!-- ### -->
<p>
  <a href="https://susam.net/correctly-printing-stafstring.html">Read on website</a> |
  <a href="https://susam.net/tag/c++.html">#c++</a> |
  <a href="https://susam.net/tag/programming.html">#programming</a> |
  <a href="https://susam.net/tag/technology.html">#technology</a>
</p>
]]>
</description>
</item>
<item>
<title>Minimal Installation of WinHTTP API</title>
<link>https://susam.net/minimal-installation-of-winhttp-api.html</link>
<guid isPermaLink="false">draiq</guid>
<pubDate>Wed, 14 Apr 2010 00:00:00 +0000</pubDate>
<description>
<![CDATA[
<p>
  Here are the steps to perform for a minimal download and
  installation of WinHTTP API for C++ so that we have the
  the <code>winhttp.lib</code> and <code>winhttp.h</code> files while
  writing C++ programs using the WinHTTP API:
</p>
<ol>
  <li>Download PSDK-x86.exe
  from <a href="https://web.archive.org/web/20100507044252/http://www.microsoft.com/downloads/details.aspx?familyid=0BAF2B35-C656-4969-ACE8-E4C0C0716ADB&amp;displaylang=en">Microsoft
      ® Windows Server® 2003 R2 Platform SDK Web Install</a>.
  </li>
  <li>
    Run the installer, select <em>Custom</em> installation type, clear
    all categories and select <em>Microsoft Windows Core SDK</em> &gt;
    <em>Build Environment</em> &gt; <em>Build Environment (x86
    32-bit)</em>.
  </li>
</ol>
<p>
  After the installation is complete, the <code>winhttp.h</code> file
  can be found at <code>C:\Program Files\Microsoft Platform SDK Server
    2003 R2\Include</code>.
</p>
<!-- ### -->
<p>
  <a href="https://susam.net/minimal-installation-of-winhttp-api.html">Read on website</a> |
  <a href="https://susam.net/tag/c++.html">#c++</a> |
  <a href="https://susam.net/tag/windows.html">#windows</a> |
  <a href="https://susam.net/tag/programming.html">#programming</a> |
  <a href="https://susam.net/tag/technology.html">#technology</a>
</p>
]]>
</description>
</item>


</channel>
</rss>
